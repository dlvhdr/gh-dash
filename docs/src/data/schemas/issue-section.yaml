# yaml-language-server: $schema=https://json-schema.org/draft/2020-12/schema
$schema: https://json-schema.org/draft/2020-12/schema
$id: issue-section.schema.yaml
title: Issue Section Options
description: Defines a section in the dashboard's Issues view.
type: object
schematize:
  details: |
    Defines a section in the dashboard's Issues view.

    Every section must define a [sref:`title`] and [sref:`filters`].

    When you define [sref:`limit`] for a section, that value overrides the
    [sref:`defaults.issuesLimit`] setting.

    When you define [sref:`layout`] for a section, that value overrides the
    [sref:`defaults.layout.issue`] setting.

    [sref:`title`]:                 issue-section.title
    [sref:`filters`]:               issue-section.filters
    [sref:`limit`]:                 issue-section.limit
    [sref:`layout`]:                issue-section.layout
    [sref:`defaults.issuesLimit`]:  defaults.issuesLimit
    [sref:`defaults.layout.issue`]: defaults.layout.issue
required:
  - title
  - filters
properties:
  title:
    title: Issue Title
    description: Defines the section's name as displayed in the tabs for the issues view.
    type: string
    schematize:
      weight: 1
      details: |
        This setting defines the section's name. The dashboard displays this value in the tabs for
        the issues view.
  filters:
    title: Issue Filters
    description: Defines the GitHub search filters for the issues in the section's table.
    type: string
    schematize:
      weight: 2
      details: |
        This setting defines the [GitHub search filters][01] for the issues in the section's table.

        Don't specify `is:issue` for this setting. The dashboard always adds that filter for issue
        sections.

        You can define any combination of search filters. To make it easier to read and maintain
        your filters, we recommend using the `>-` syntax after the `filter` key and writing one
        filter per line.

        For example:

        ```yaml
        - title: Involved
          filter: >-
            is:open
            involves:@me
            -author:@me
            updated>={{ nowModify "-2w" }}
        ```

        For more information about writing filters for searching GitHub, see [Searching].

        [Searching]: /configuration/searching
  layout:
    $ref: ./layout/issue.yaml
    schematize:
      weight: 3
  limit:
    title: Issue Fetch Limit
    type: integer
    minimum: 1
    schematize:
      weight: 4
      details: |
        This setting defines how many issues the dashboard should fetch for the section when:

        - The dashboard first loads.
        - The [sref:fetch interval] elapses.
        - You navigate to the next issue in a table without another fetched issue to display.
        - You use the [refresh current section] or [refresh all sections] commands.

        This setting overrides the [sref:`defaults.issuesLimit`] setting.

        [sref:fetch interval]:     defaults.fetchIntervalMinutes
        [refresh current section]: /getting-started/keybindings/global/#refresh-current-section
        [refresh all sections]:    /getting-started/keybindings/global/#refresh-all-sections
        [sref:`defaults.issuesLimit`]: defaults.issuesLimit
