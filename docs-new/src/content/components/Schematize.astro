---

// import { getEntry, render } from 'astro:content';
// const entry = await getEntry('yamlSchemas', 'gh-dash');
// const { Content, headings } = await render(entry!);

import { getCollection } from 'astro:content';
const schemas = await getCollection('yamlSchemas');
---
<!-- {Object.entries(top).map(([key, val]) => ( -->
<!--   <div> -->
<!--     <h2>{val.title}</h2> -->
<!--     <p>{val.description}</p> -->
<!--     <p>{val.schematize.details}</p> -->
<!--   </div> -->
<!-- ))} -->

{schemas.sort((a, b) => {
  const wa = a.data.schematize?.weight ?? Infinity
  const wb = b.data.schematize?.weight ?? Infinity
  return wa-wb;
}).map(schema => (
  <div>
    <h1>{schema.data.title}</h1>
    <p>{schema.data.description}</p>
    {Object.entries(schema.data.properties ?? {}).map(([_, prop]) => {
      if ("$ref" in prop){
        return null;
      } else {
        return (
          <h2>{prop.title}</h2>
          <p>{prop.description}</p>
<Fragment set:html={schema.rendered?.html}/>
        );
      }
  })}
  </div>
))}
